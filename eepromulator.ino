#include <Wire.h>

#define SLAVE_ADDRESS 0x50

static uint8_t eeprom[256] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x17,
    0xf3, 0x1a, 0x00, 0x04, 0x93, 0xe7, 0x5c, 0xa3, 0x00, 0x03, 0x5f, 0xe9, 0x70, 0x53, 0x00, 0x04,
    0x14, 0x6e, 0x00, 0x0a, 0x56, 0xf5, 0x00, 0x07, 0x5a, 0x26, 0x00, 0x09, 0x52, 0x02, 0x00, 0x22,
    0xc7, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1f, 0x17, 0xf3, 0x1a, 0x00, 0x04, 0x93, 0xe7, 0x5c, 0xa3, 0x00, 0x03,
    0x5f, 0xe9, 0x70, 0x53, 0x00, 0x04, 0x14, 0x6e, 0x00, 0x0a, 0x56, 0xf5, 0x00, 0x07, 0x5a, 0x26,
    0x00, 0x09, 0x52, 0x02, 0x00, 0x22, 0xc7, 0xab, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x17, 0xf3, 0x1a, 0x00, 0x04,

    0x93, 0xe7, 0x5c, 0xa3, 0x00, 0x03, 0x5f, 0xe9, 0x70, 0x53, 0x00, 0x04, 0x14, 0x6e, 0x00, 0x0a,
    0x56, 0xf5, 0x00, 0x07, 0x5a, 0x26, 0x00, 0x09, 0x52, 0x02, 0x00, 0x22, 0xc7, 0xab, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x0d, 0x40, 0x00, 0x04, 0x45, 0xc0, 0x00, 0x04, 0x93, 0xe0, 0x3e, 0x80,
    0x4e, 0x20, 0x75, 0x30, 0x00, 0x33, 0xd1, 0xa0, 0x00, 0x45, 0x17, 0x80, 0x00, 0x67, 0xa3, 0x40,
    0x00, 0x0d, 0xb6, 0x0a, 0x00, 0x09, 0xd6, 0xc5, 0x00, 0x0c, 0x4e, 0xcf, 0x00, 0x2b, 0x31, 0x5a,
    0x00, 0x19, 0x1a, 0xf6, 0x03, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x26, 0x00, 0x00,
    0x2a, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x46, 0x08, 0x35, 0xcd, 0x01, 0x00, 0x58, 0x04, 0x24, 0x05, 0x11, 0x20, 0xff, 0xff, 0xff, 0xff
};

void requestEvent();
void receiveEvent(int bytesReceived);

static bool updated = false;
static uint8_t _requestCount = 0;
static uint8_t _receiveCount = 0;
static uint8_t _bytesReceivedCount = 0;
static uint8_t _bytesReceived = 0;
volatile uint8_t _lastByte = 0x00;

void setup()
{
  Serial.begin(9600);
  Serial.print("eepromuino\r\n");
  Wire.begin(SLAVE_ADDRESS); 
  Wire.onRequest(requestEvent);
  Wire.onReceive(receiveEvent);
}

void loop()
{
  if (updated) {
    Serial.print("bytesReceived: ");
    Serial.println(_bytesReceived);
    Serial.print("requestCount: ");
    Serial.println(_requestCount);
    Serial.print("receiveCount: ");
    Serial.println(_receiveCount);
    Serial.print("lastByte: ");
    Serial.println(_lastByte);
    Serial.print("\r\n");
    updated = false;
  }
}

#define MIN( X , Y ) ( (X) > (Y) ? (Y):(X) )
void requestEvent()
{
  ++_requestCount;
  Wire.write(eeprom+_lastByte, MIN(sizeof(eeprom)-_lastByte, 255));
  updated = true;
}

void receiveEvent(int bytesReceived)
{
  _bytesReceived = bytesReceived;
  _bytesReceivedCount += bytesReceived;
  _lastByte = Wire.read();
  ++_receiveCount;
  updated = true;
}

